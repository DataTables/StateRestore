<?xml version="1.0" encoding="UTF-8" ?>
<dt-option library="StateRestore">
	<name>stateRestore.toggle</name>
	<summary>Enable/Disable the saving for various datatables elements when saving a new state</summary>
	<since>1.0.0</since>

	<type type="object">
		<description>
            This initialisation option is an object that includes a variety of boolean values that alloow the user to specify which different elements of datatables should be saved when creating a new state.
        </description>
	</type>

	<default value="object">
        The default value for the `-init stateRestore.toggle` option is an object as follows. This will allow the user to configure what to save for each datatables element that supports state saving.

        ```
        {
            columns: {
                search: false,
                visible: false
            },
            order: false,
            paging: false,
            scroller: false,
            search: false,
            searchBuilder: false,
            searchPanes: false,
            select: false
        }
        ```
	</default>
	<description>
		<![CDATA[
This option allows the user to specify which elements should be saved when creating a new state. The option is an object containing boolean values, one for each element that could be saved. When set to `true`, a checkBox will appear in the creation modal for the corresponding element, allowing the user to decide whether it should be saved or not.

For the extensions that support state saving, if the extension is not present then the toggling option will not be displayed regardless of the corresponding value here.

In order to display the creation modal, `-init stateRestore.creationModal` must be set to `true`.

The list of boolean values is as follows, it is the format as `-init stateRestore.saveState`.

### order
This option allows for the saving of the column sorting to be enabled or disabled by the user.

As default the value is `true`, meaning that the user can decide whether the column sorting will be saved. If this option is set to `false`, then column sorting saving will not be given as an option to the user on creation.


### paging
This option allows for the saving of the paging to be enabled or disabled by the user.

As default the value is `true`, meaning that the user can decide whether the paging will be saved. If this option is set to `false`, then the paging saving will not be given as an option to the user on creation.


### search
This option allows for the saving of the search to be enabled or disabled by the user.

As default the value is `true`, meaning that the user can decide whether the search will be saved. If this option is set to `false`, then the search saving will not be given as an option to the user on creation.


### columns.search
This option allows for the saving of the search applied to individual columns to be enabled or disabled by the user.

As default the value is `true`, meaning that the user can decide whether the column searches will be saved. If this option is set to `false`, then column searches will not not be given as an option to the user on creation.


### columns.visible
This option allows for the saving of the visibility of the columns to be enabled or disabled by the user.

As default the value is `true`, meaning that the user can decide whether the column visibilities will be saved. If this option is set to `false`, then column visibilites will not not be given as an option to the user on creation.


### scroller
This option allows for the saving of the `-init scroller` position to be enabled or disabled by the user. This option is only applicable when both the `-init stateRestore` and `-init scroller` extensions are in use.

As default the value is `true`, meaning that the user can decide whether the `-init scroller` position will be saved. If this option is set to `false`, then the `-init scroller` position saving will not be given as an option to the user on creation.


### searchBuilder
This option allows for the saving of the `-init searchBuilder` state to be enabled or disabled by the user. This option is only applicable when both the `-init stateRestore` and `-init searchBuilder` extensions are in use.

As default the value is `true`, meaning that the user can decide whether the `-init searchBuilder` state will be saved. If this option is set to `false`, then the `-init searchBuilder` state saving will not be given as an option to the user on creation.

### searchPanes
This option allows for the saving of the `-init searchPanes` state to be enabled or disabled by the user. This option is only applicable when both the `-init stateRestore` and `-init searchPanes` extensions are in use.

As default the value is `true`, meaning that the user can decide whether the `-init searchPanes` state will be saved. If this option is set to `false`, then the `-init searchPanes` state saving will not be given as an option to the user on creation.

### select
This option allows for the saving of the `-init select` state to be enabled or disabled by the user. This option is only applicable when both the `-init stateRestore` and `-init select` extensions are in use.

As default the value is `true`, meaning that the user can decide whether the `-init select` state will be saved. If this option is set to `false`, then the `-init select` state saving will not be given as an option to the user on creation.

        ]]>
	</description>

<example title="Enable paging saving customisation"><![CDATA[
 $('#example').DataTable({
    dom: 'Blfrtip',
    buttons:[
        {
            extend: 'createState',
            config: {
                toggle:{
                    paging: true
                }
            }
        },
        'savedStates',
        'colvis'
    ]
});
]]></example>
<example title="Enable column visibility saving customisation"><![CDATA[
 $('#example').DataTable({
    dom: 'Blfrtip',
    buttons:[
        {
            extend: 'createState',
            config: {
                toggle:{
                    columns:{
                        visible: true
                    }
                }
            }
        },
        'savedStates',
        'colvis'
    ]
});
]]></example>

<related type="option">stateRestore.saveState</related>
<related type="option">stateRestore.creationModal</related>


</dt-option>