<?xml version="1.0" encoding="UTF-8" ?>
<dt-api library="StateRestore">
	<name>stateRestore.state()</name>
	<summary>Get a state from StateRestore</summary>
	<since>0.0.1</since>

	<type type="function">
		<signature>stateRestore.state()</signature>
        <parameter type="string" name="identifier">The string that is used to identify this state.</parameter>
		<description>Retrieves a stored state from the StateRestore extension.</description>
		<returns type="DataTablesApi">Returns an DataTables API containing the desired state so that chaining can occur.</returns>
	</type>

	<description>
	<![CDATA[
This method provides the ability to retrieve a state that is managed by the `-init stateRestore` extension.

`-api stateRestore.state()` takes one argument, `identifier`. This string is used to identify the state throughout StateRestore.

A Datatables API is returned containing the state that is desired. This method will mainly be used for chaining. 
	]]>

	</description>

	<example title="Get a state called 'New State'"><![CDATA[
$(document).ready(function() {
    var table = $('#example').DataTable({
        dom: 'Blfrtip',
        buttons:['createState', 'savedStates']
    });

    table.stateRestore.state("New State")
});
]]></example>

<related type="api">stateRestore.states()</related>
<related type="api">stateRestore.state().remove()</related>
<related type="api">stateRestore.state().load()</related>
<related type="api">stateRestore.state().rename()</related>
<related type="api">stateRestore.state().save()</related>

</dt-api>