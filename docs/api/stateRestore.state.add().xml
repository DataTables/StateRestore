<?xml version="1.0" encoding="UTF-8" ?>
<dt-api library="StateRestore">
	<name>stateRestore.state.add()</name>
	<summary>Create a new state</summary>
	<since>1.0.0</since>

	<type type="function">
		<signature>stateRestore.state.add()</signature>
        <parameter type="string" name="identifier">The string that is used to identify this state. This must be unique in order to differentiate between the different states that may be stored within StateRestore.</parameter>
		<description>Creates a new StateRestore instance.</description>
		<returns type="DataTablesApi">Returns a DataTables API for chaining, with the object containing the state that has been extracted from the table in the result set.</returns>
	</type>

	<description>
	<![CDATA[
This method provides the ability to create a new state that is managed by the `-init stateRestore` extension.

`-api stateRestore.state.add()` takes one argument, `identifier`. This string is used to identify the state throughout StateRestore. It is used when naming the state in whatever storage method is selected and is also shown in the state's button.

The object that is returned within the DataTables API result set, represents the state that is present in the table at the time of saving. 
	]]>

	</description>

	<example title="Add a new state called 'New State'"><![CDATA[
var table = new DataTable('#myTable', {
	layout: {
		topStart: {
			buttons: ['createState', 'savedStates']
		}
	}
});

table.stateRestore.state.add('New State');
]]></example>

</dt-api>
