<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="html" table-class="display nowrap" order="4">

<css lib="datatables buttons staterestore scroller"/>

<js lib="jquery datatables staterestore buttons scroller">
<![CDATA[

$('#example').DataTable({
	ajax: {
		url: '../data/2500States.txt',
		dataSrc: 'data'
	},
	layout: {
		topStart: {
			buttons: [
				{
					extend: 'savedStates',
					config: {
						save: false,
						rename: false,
						remove: false
					}
				}
			]
		}
	},
	scrollY: 200,
	scrollCollapse: true,
	scroller: true
});

]]>
</js>

<js-vanilla>
<![CDATA[

new DataTable('#example', {
	ajax: {
		url: '../data/2500States.txt',
		dataSrc: 'data'
	},
	layout: {
		topStart: {
			buttons: [
				{
					extend: 'savedStates',
					config: {
						save: false,
						rename: false,
						remove: false
					}
				}
			]
		}
	},
	scrollY: 200,
	scrollCollapse: true,
	scroller: true
});

]]>
</js-vanilla>

<title lib="stateRestore">Predefined States - No Save, Remove, Rename or Create</title>

<info><![CDATA[
This example shows how predefined states can be supplied using the `-init stateRestore` extension. The state present under the `Saved States` button contains a predefined state that will scroll the table and apply an order to the third column.

Renaming, updating and removing this state are all disabled using the `-init stateRestore.rename`, `-init stateRestore.save` and `-init stateRestore.remove` options. This means that there is no reason for the state to be a split button. It is instead just a normal button that provides solely a load function. Because it is built into the ajax data that is sent initially, the state will always be present on a new page load.
]]></info>

<custom-table>
<table id="example" class="display nowrap" style="width:100%">
        <thead>
            <tr>
                <th>ID</th>
                <th>First name</th>
                <th>Last name</th>
                <th>ZIP / Post code</th>
                <th>Country</th>
            </tr>
        </thead>
    </table>
</custom-table>

</dt-example>
