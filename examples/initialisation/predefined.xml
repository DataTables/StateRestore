<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="html" table-class="display nowrap" order="4">

<css lib="datatables buttons staterestore scroller"/>

<js lib="jquery datatables staterestore buttons scroller">
<![CDATA[

$('#example').DataTable({
	layout: {
		topStart: {
			buttons: [
				'createState',
				{
					extend: 'savedStates',
					config: {
						preDefined: {
							'Order Position, Search London, Hide Start date': {
								order: [[1, 'asc']],
								search: {
									search: 'London',
									smart: true,
									regex: false,
									caseInsensitive: true
								},
								columns: [
									{ visible: true },
									{ visible: true },
									{ visible: true },
									{ visible: true },
									{ visible: false },
									{ visible: true }
								]
							}
						}
					}
				}
			]
		}
	}
});

]]>
</js>

<js-vanilla>
<![CDATA[

new DataTable('#example', {
	layout: {
		topStart: {
			buttons: [
				'createState',
				{
					extend: 'savedStates',
					config: {
						preDefined: {
							'Order Position, Search London, Hide Start date': {
								order: [[1, 'asc']],
								search: {
									search: 'London',
									smart: true,
									regex: false,
									caseInsensitive: true
								},
								columns: [
									{ visible: true },
									{ visible: true },
									{ visible: true },
									{ visible: true },
									{ visible: false },
									{ visible: true }
								]
							}
						}
					}
				}
			]
		}
	}
});

]]>
</js-vanilla>

<title lib="stateRestore">Predefined States</title>

<info><![CDATA[
This example shows how predefined states can be supplied using the StateRestore extension. The state present under the `Saved States` button contains a predefined state that will apply an order to the second column, search for London and hide the 'Start date' column.

Renaming, updating and removing this state could all be disabled using the `rename`, `save` and `remove` options of the `-type stateRestoreConfig` configuration object. Because it is built into the DataTable's initialisation, the state will always be present on a new page load, even if it has been removed previously.
]]></info>

</dt-example>
